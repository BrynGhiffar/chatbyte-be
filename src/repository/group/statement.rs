pub const READ_ALL_MESSAGE_STMT: &str = "
INSERT INTO PUBLIC.GROUP_MESSAGE_READ(message_id, reader_id, group_id)
SELECT GM.id as message_id, $1 as reader_id, GM.GROUP_ID FROM PUBLIC.GROUP_MESSAGE GM
WHERE GM.GROUP_ID = $2
AND
NOT EXISTS (
    SELECT 1 FROM PUBLIC.GROUP_MESSAGE_READ GMR 
        WHERE GMR.message_id = GM.id 
            AND GMR.reader_id = $1
            AND GMR.group_id = $2
)
";

pub const FIND_USER_GROUP_RECENT_STMT: &str = "
SELECT * FROM 
(
    SELECT GMEM.GROUP_ID,
        (SUM(
            CASE WHEN GM.ID IS NOT NULL THEN 1 ELSE 0 END
        ) - 
        SUM(
            CASE WHEN GMR.READER_ID IS NOT NULL THEN 1 ELSE 0 END
        )) AS UNREAD_MESSAGE
    FROM PUBLIC.GROUP_MEMBER GMEM
        LEFT JOIN PUBLIC.GROUP_MESSAGE GM ON GM.GROUP_ID = GMEM.GROUP_ID
        LEFT JOIN PUBLIC.GROUP_MESSAGE_READ GMR 
            ON GMR.GROUP_ID = GMEM.GROUP_ID 
                AND GMR.READER_ID = GMEM.USER_ID
                AND GMR.MESSAGE_ID = GM.ID
    WHERE GMEM.USER_ID = $1
    GROUP BY GMEM.GROUP_ID
) UM
    JOIN PUBLIC.LAST_MESSAGE_GROUP LMG ON UM.GROUP_ID = LMG.GROUP_ID
ORDER BY LMG.SENT_AT DESC NULLS LAST
;
";
pub const FIND_ALL_GROUP_MESSAGE_STMT: &str = "
SELECT 
    GM.ID as ID,
    GM.SENDER_ID AS SENDER_ID,
    U.USERNAME AS USERNAME,
    GM.CONTENT AS CONTENT,
    GM.GROUP_ID AS GROUP_ID,
    GM.EDITED AS EDITED,
    GM.DELETED AS DELETED,
    GM.SENT_AT AS SENT_AT
FROM PUBLIC.GROUP_MESSAGE  GM
    JOIN PUBLIC.USER U ON U.ID = GM.SENDER_ID
WHERE GROUP_ID = $1
ORDER BY GM.SENT_AT ASC;
";
pub const CREATE_GROUP_MESSAGE_STMT: &str = "
WITH GM AS (
    INSERT INTO PUBLIC.GROUP_MESSAGE (GROUP_ID, SENDER_ID, CONTENT) VALUES($1, $2, $3) RETURNING *
) SELECT     
    GM.ID as ID,
    GM.SENDER_ID AS SENDER_ID,
    U.USERNAME AS USERNAME,
    GM.CONTENT AS CONTENT,
    GM.GROUP_ID AS GROUP_ID,
    GM.EDITED AS EDITED,
    GM.DELETED AS DELETED,
    GM.SENT_AT AS SENT_AT
FROM GM JOIN PUBLIC.USER U ON U.ID = GM.SENDER_ID;
";
pub const FIND_GROUP_MEMBER_STMT: &str = "
SELECT user_id FROM PUBLIC.GROUP_MEMBER WHERE group_id = $1
";
pub const SET_PROFILE_IMAGE_FOR_GROUP_STMT: &str = "
INSERT INTO PUBLIC.GROUP_AVATAR (group_id, group_image) VALUES ($1, $2) 
ON CONFLICT (group_id) DO
UPDATE
    SET group_image = $2
";
pub const GET_PROFILE_IMAGE_FOR_GROUP_STMT: &str = "
SELECT PUBLIC.GROUP_AVATAR.GROUP_IMAGE FROM PUBLIC.GROUP_AVATAR WHERE PUBLIC.GROUP_AVATAR.GROUP_ID = $1
";
pub const CREATE_GROUP_STMT: &str = "INSERT INTO PUBLIC.GROUP (name) VALUES ($1) RETURNING *";
pub const FIND_GROUP_FOR_USER_STMT: &str = "
SELECT
    PUBLIC.GROUP.ID AS id, PUBLIC.GROUP.NAME AS name
FROM PUBLIC.GROUP_MEMBER 
    JOIN PUBLIC.GROUP ON PUBLIC.GROUP.ID = PUBLIC.GROUP_MEMBER.GROUP_ID 
WHERE PUBLIC.GROUP_MEMBER.USER_ID = $1
";
pub const DELETE_GROUP_STMT: &str = "
UPDATE PUBLIC.GROUP SET DISBANDED = TRUE WHERE ID = $1
";
pub const REMOVE_USER_FROM_GROUP_STMT: &str = "
DELETE FROM PUBLIC.GROUP_MEMBER WHERE user_id = $1 and group_id = $2
";
pub const ADD_USER_TO_GROUP_STMT: &str = "
INSERT INTO PUBLIC.GROUP_MEMBER (group_id, user_id) VALUES ($1, $2)
";
pub const RENAME_GROUP_STMT: &str = "
UPDATE PUBLIC.GROUP SET name = $2 WHERE id = $1
";
pub const SET_MESSAGE_DELETE_STMT: &str = "
UPDATE PUBLIC.GROUP_MESSAGE SET DELETED = TRUE WHERE ID = $1
";
pub const FIND_GROUP_MESSAGE_BY_ID: &str = "
SELECT     
    GM.ID as ID,
    GM.SENDER_ID AS SENDER_ID,
    U.USERNAME AS USERNAME,
    GM.CONTENT AS CONTENT,
    GM.GROUP_ID AS GROUP_ID,
    GM.EDITED AS EDITED,
    GM.DELETED AS DELETED,
    GM.SENT_AT AS SENT_AT
FROM PUBLIC.GROUP_MESSAGE GM 
    JOIN PUBLIC.USER U ON U.ID = GM.SENDER_ID
WHERE GM.ID = $1;
";
pub const EDIT_MESSAGE_BY_ID_STMT: &str = "
WITH GM AS (
    UPDATE PUBLIC.GROUP_MESSAGE
        SET CONTENT = $2, EDITED = TRUE
    WHERE ID = $1 RETURNING *
) SELECT     
    GM.ID as ID,
    GM.SENDER_ID AS SENDER_ID,
    U.USERNAME AS USERNAME,
    GM.CONTENT AS CONTENT,
    GM.GROUP_ID AS GROUP_ID,
    GM.EDITED AS EDITED,
    GM.DELETED AS DELETED,
    GM.SENT_AT AS SENT_AT
FROM GM JOIN PUBLIC.USER U ON U.ID = GM.SENDER_ID;
";
